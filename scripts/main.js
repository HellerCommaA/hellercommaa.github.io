
jQuery(() => {
    const inGameName = $('#inGameName');
    const addItem = $('#addItemBtn'); // add item button
    const generateBtn = $('#generateBtn'); // submit / generate button
    const clearAllBtn = $('#clearAllBtn'); // clear all button
    const item = $('#itemTextArea'); // item text area with json from pd2
    const items = $('#itemsOutArea'); // items output area
    const generatedArea = $('#generatedText'); // generated text area to paste to discord
    const generatedSection = $('#generatedSection'); // section container
    const alertArea = $('#alertArea'); // general alert area
    const wantForItem = $('#wantForItem'); // what the want is for this given item

    let saveJson = []; // TODO: implement save functionality

    clearAllBtn.on('click', (e) => {
        e.preventDefault();
        item.val('');
        alertArea.removeClass('show');
        items.html('');
        item.val('');
        wantForItem.val('');
        generatedArea.html('');
        generatedSection.hide();
    });

    alertArea.on('click', () => { alertArea.removeClass('show'); });

    generateBtn.on('click', generateClicked);
    
    addItem.on('click', addItemClicked);

    function addItemClicked(e) {
        e.preventDefault();
        // attempt to prevent BS submissions
        if (item.val() == null || item.val() == '') {
            console.log('empty item entry, bailing');
            return;
        }

        let itmJson = null;
        try { 
            itmJson = JSON.parse(item.val());
        } catch { 
            // pass
        }
        if (itmJson == null) {
            makeAlert('Invalid item JSON detected. Double check your entry.');
            return;
        }
        
        let i = new Item(itmJson);
        const wantString = makeWantString();
        items.html(items.html() + '<li>' + i.toString() + wantString + '</li>');
        saveJson.push([i.toJson(), wantForItem.val()]);
        generatedArea.html(generatedArea.html() + i.toString() + wantString + '\n');


        item.val('');
        wantForItem.val('');
    }

    function makeWantString() {
        if (wantForItem.val() == null || wantForItem.val() == '') return '';
        return ' [W] ' + wantForItem.val();
    }

    function generateClicked(e) {
        e.preventDefault();
        const oldHtml = generatedArea.html();

        generatedArea.html('');
        let str = '';
        str += 'Contact here';
        if (inGameName.val() != '') {
            str += ' or /w ' + inGameName.val() + ' in game.';
        }
        str += '\n';
        str += oldHtml;
        str += generateAd();
        generatedArea.html(str);
        generatedSection.show();
    }

    function generateAd() {
        return 'This trade generated by Trade Manager at https://hellercommaa.github.io';
    }


    function makeAlert(xMsg) {
        alertArea.text(xMsg);
        alertArea.addClass('show');
    }

});

